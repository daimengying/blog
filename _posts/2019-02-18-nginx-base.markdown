---
layout: post
title:  "分布式锁zk和redis"
categories: zookeeper
tags: Java高阶面试
author: mydai
description: (二)分布式锁zk和redis
---

### redis分布式锁(RedLock算法)
**RedLock算法** <br/>
假设有一个redis cluster，有5个redis master实例。然后执行如下步骤获取一把锁：<br/>
1）获取当前时间戳，单位是毫秒<br/>
2）跟上面类似，轮流尝试在每个master节点上创建锁，过期时间较短，一般就几十毫秒<br/>
3）尝试在大多数节点上建立一个锁，比如5个节点就要求是3个节点（n / 2 +1）<br/>
4）客户端计算建立好锁的时间，如果建立锁的时间小于超时时间，就算建立成功了<br/>
5）要是锁建立失败了，那么就依次删除这个锁<br/>
6）只要别人建立了一把分布式锁，你就得不断轮询去尝试获取锁<br/>

### zk分布式锁
某个节点尝试创建临时znode，此时创建成功了就获取了这个锁；这个时候别的客户端来创建锁会失败，只能注册个监听器监听这个锁。释放锁就是删除这个znode，一旦释放掉就会通知客户端，然后有一个等待着的客户端就可以再次重新枷锁。

### redis分布式锁和zk分布式锁的对比
redis分布式锁，其实需要自己不断去尝试获取锁，比较消耗性能

zk分布式锁，获取不到锁，注册个监听器即可，不需要不断主动尝试获取锁，性能开销较小

另外一点就是，如果是redis获取锁的那个客户端bug了或者挂了，那么只能等待超时时间之后才能释放锁；而zk的话，因为创建的是临时znode，只要客户端挂了，znode就没了，此时就自动释放锁

